try:
    oflag = raw_input('Guess the flag (32-hex): ').strip()
    flag = map(lambda x: int(x,16),oflag)
    assert(len(flag) == 32)
    assert((flag[25]*flag[27]) ^ (flag[3] + flag[10]) == 63)
    assert((flag[8]*flag[5]) ^ (flag[0] + flag[11]) == 93)
    assert((flag[4]*flag[5]) ^ (flag[24] + flag[31]) == 80)
    assert((flag[1]*flag[28]) ^ (flag[12] + flag[30]) == 8)
    assert((flag[7]*flag[4]) ^ (flag[31] + flag[22]) == 19)
    assert((flag[16]*flag[31]) ^ (flag[9] + flag[7]) == 60)
    assert((flag[14]*flag[31]) ^ (flag[27] + flag[8]) == 26)
    assert((flag[0]*flag[15]) ^ (flag[19] + flag[26]) == 13)
    assert((flag[9]*flag[25]) ^ (flag[25] + flag[12]) == 25)
    assert((flag[21]*flag[1]) ^ (flag[0] + flag[7]) == 26)
    assert((flag[28]*flag[10]) ^ (flag[17] + flag[28]) == 74)
    assert((flag[16]*flag[0]) ^ (flag[28] + flag[0]) == 99)
    assert((flag[14]*flag[14]) ^ (flag[20] + flag[7]) == 2)
    assert((flag[17]*flag[12]) ^ (flag[3] + flag[12]) == 17)
    assert((flag[31]*flag[25]) ^ (flag[18] + flag[30]) == 6)
    assert((flag[15]*flag[6]) ^ (flag[13] + flag[11]) == 12)
    assert((flag[26]*flag[15]) ^ (flag[29] + flag[5]) == 16)
    assert((flag[12]*flag[1]) ^ (flag[24] + flag[10]) == 19)
    assert((flag[12]*flag[8]) ^ (flag[23] + flag[30]) == 141)
    assert((flag[22]*flag[26]) ^ (flag[11] + flag[21]) == 33)
    assert((flag[8]*flag[16]) ^ (flag[13] + flag[15]) == 105)
    assert((flag[8]*flag[10]) ^ (flag[7] + flag[1]) == 74)
    assert((flag[17]*flag[5]) ^ (flag[9] + flag[10]) == 15)
    assert((flag[13]*flag[19]) ^ (flag[20] + flag[17]) == 46)
    assert((flag[23]*flag[0]) ^ (flag[19] + flag[21]) == 99)
    assert((flag[22]*flag[7]) ^ (flag[14] + flag[3]) == 15)
    assert((flag[0]*flag[28]) ^ (flag[13] + flag[7]) == 215)
    assert((flag[30]*flag[0]) ^ (flag[14] + flag[9]) == 125)
    assert((flag[2]*flag[1]) ^ (flag[20] + flag[26]) == 20)
    assert((flag[5]*flag[25]) ^ (flag[6] + flag[27]) == 2)
    assert((flag[11]*flag[28]) ^ (flag[28] + flag[25]) == 123)
    assert((flag[28]*flag[27]) ^ (flag[1] + flag[14]) == 208)
    assert((flag[9]*flag[0]) ^ (flag[4] + flag[16]) == 50)
    assert((flag[9]*flag[24]) ^ (flag[9] + flag[2]) == 5)
    assert((flag[4]*flag[5]) ^ (flag[2] + flag[3]) == 66)
    assert((flag[23]*flag[25]) ^ (flag[6] + flag[31]) == 17)
    assert((flag[31]*flag[17]) ^ (flag[2] + flag[5]) == 8)
    assert((flag[26]*flag[26]) ^ (flag[28] + flag[30]) == 8)
    assert((flag[19]*flag[10]) ^ (flag[26] + flag[3]) == 37)
    assert((flag[11]*flag[29]) ^ (flag[19] + flag[27]) == 81)
    assert((flag[15]*flag[14]) ^ (flag[15] + flag[0]) == 14)
    assert((flag[13]*flag[10]) ^ (flag[3] + flag[25]) == 12)
    assert((flag[26]*flag[8]) ^ (flag[1] + flag[21]) == 60)
    assert((flag[27]*flag[19]) ^ (flag[9] + flag[1]) == 123)
    assert((flag[25]*flag[21]) ^ (flag[24] + flag[12]) == 14)
    assert((flag[18]*flag[24]) ^ (flag[8] + flag[30]) == 11)
    assert((flag[19]*flag[2]) ^ (flag[8] + flag[14]) == 93)
    assert((flag[0]*flag[5]) ^ (flag[21] + flag[25]) == 89)
    assert((flag[30]*flag[12]) ^ (flag[30] + flag[9]) == 121)
    assert((flag[14]*flag[25]) ^ (flag[26] + flag[26]) == 8)
    assert((flag[25]*flag[27]) ^ (flag[3] + flag[7]) == 37)
    assert((flag[6]*flag[11]) ^ (flag[21] + flag[19]) == 29)
    assert((flag[25]*flag[12]) ^ (flag[20] + flag[31]) == 46)
    assert((flag[3]*flag[10]) ^ (flag[21] + flag[15]) == 80)
    assert((flag[29]*flag[18]) ^ (flag[28] + flag[14]) == 107)
    assert((flag[14]*flag[9]) ^ (flag[25] + flag[17]) == 4)
    assert((flag[30]*flag[2]) ^ (flag[27] + flag[19]) == 70)
    assert((flag[6]*flag[26]) ^ (flag[2] + flag[28]) == 16)
    assert((flag[14]*flag[4]) ^ (flag[27] + flag[10]) == 20)
    assert((flag[22]*flag[5]) ^ (flag[9] + flag[31]) == 66)
except (AssertionError, ValueError):
    print "Wrong!"
    exit()
print "Nice! your flag is CTF{%s}" % oflag
